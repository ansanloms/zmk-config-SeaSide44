#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>
#include <input/processors.dtsi>

#define NUM 1
#define SYMBOL 2
#define MOUSE 3
#define SCROLL 4
#define CONFIG 5

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&mkp_input_listener {
    input-processors = <&zip_temp_layer MOUSE 750>;
};

/ {
    combos {
		compatible = "zmk,combos";
	};

    //macros {
    //    to_layer_0: to_layer_0 {
    //        compatible = "zmk,behavior-macro-one-param";
    //        #binding-cells = <1>;
    //        bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
    //        label = "TO_LAYER_0";
    //    };
    //};

	behaviors {
		// QMK の quick tap と同等機能にする。
		lt_spc: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;  // quick tap 機能
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB                &kp Q         &kp W         &kp E         &kp R         &kp T                                            &kp Y        &kp U        &kp I          &kp O          &kp P             &kp MINUS
&kp LCTRL              &kp A         &kp S         &kp D         &kp F         &kp G                                            &kp H        &kp J        &kp K          &kp L          &kp SEMI          &kp ENTER
&kp LSHFT              &kp Z         &kp X         &kp C         &kp V         &kp B                                            &kp N        &kp M        &kp COMMA      &kp DOT        &kp FSLH          &kp RSHFT
                                     &kp LALT      &kp LGUI      &mo MOUSE     &lt_spc NUM SPACE  &mo CONFIG       &trans       &mo SYMBOL                                              &to 0
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp ESC                &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                           &kp N6      &kp N7       &kp N8          &kp N9         &kp N0            &kp BSPC
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &kp EQUAL    &kp BSLH        &kp GRAVE      &kp DQT           &kp DEL
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &kp LBKT     &kp RBKT        &trans         &trans            &trans
                                     &trans        &trans        &trans        &trans             &trans           &trans       &trans                                                  &to 0
            >;
        };

        SYMBOL {
            bindings = <
&kp ESC                &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                           &trans      &trans       &trans          &trans         &trans            &kp BSPC
&trans                 &kp F6        &kp F7        &kp F8        &kp F9        &kp F10                                          &kp LEFT    &kp DOWN     &kp UP          &kp RIGHT      &trans            &trans
&trans                 &kp F11       &kp F12       &kp F13       &kp F14       &kp F15                                          &trans      &trans       &trans          &trans         &trans            &trans
                                     &trans        &trans        &trans        &trans             &trans           &trans       &trans                                                  &to 0
            >;
        };

        MOUSE {
            bindings = <
&kp ESC                &trans	     &trans        &trans        &trans        &trans                                           &trans      &trans       &trans          &trans         &trans            &trans
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &mkp MB1     &mkp MB2        &mo SCROLL     &trans            &trans
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &mkp MB4     &mkp MB5        &trans         &trans            &trans
                                     &trans        &trans        &trans        &trans             &trans           &trans       &trans                                                  &to 0
            >;
        };

        SCROLL {
            bindings = <
&kp ESC                &trans	     &trans        &trans        &trans        &trans                                           &trans      &trans       &trans          &trans         &trans            &trans
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &mkp MB1     &mkp MB2        &mo SCROLL     &trans            &trans
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &mkp MB4     &mkp MB5        &trans         &trans            &trans
                                     &trans        &trans        &trans        &trans             &trans           &trans       &trans                                                  &to 0
            >;
        };

        CONFIG {
            bindings = <
&kp C_AL_LOCK          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                     &trans      &trans       &kp C_MUTE      &kp C_VOL_DN   &kp C_VOL_UP      &trans
&trans                 &bt BT_CLR    &trans	       &trans        &trans        &trans                                           &trans      &trans       &trans          &trans         &trans            &trans
&trans                 &trans        &trans        &trans        &trans        &trans                                           &trans      &trans       &trans          &trans         &trans            &trans
                                     &trans        &trans        &trans        &trans             &trans           &trans       &trans                                                  &to 0
            >;
        };
    };
};
